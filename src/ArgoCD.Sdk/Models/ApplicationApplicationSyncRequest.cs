// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArgoCD.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ApplicationApplicationSyncRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The appNamespace property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppNamespace { get; set; }
#nullable restore
#else
        public string AppNamespace { get; set; }
#endif
        /// <summary>The dryRun property</summary>
        public bool? DryRun { get; set; }
        /// <summary>The infos property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1Info>? Infos { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1Info> Infos { get; set; }
#endif
        /// <summary>The manifests property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Manifests { get; set; }
#nullable restore
#else
        public List<string> Manifests { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The project property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Project { get; set; }
#nullable restore
#else
        public string Project { get; set; }
#endif
        /// <summary>The prune property</summary>
        public bool? Prune { get; set; }
        /// <summary>The resources property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1SyncOperationResource>? Resources { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1SyncOperationResource> Resources { get; set; }
#endif
        /// <summary>The retryStrategy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1RetryStrategy? RetryStrategy { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1RetryStrategy RetryStrategy { get; set; }
#endif
        /// <summary>The revision property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Revision { get; set; }
#nullable restore
#else
        public string Revision { get; set; }
#endif
        /// <summary>The revisions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Revisions { get; set; }
#nullable restore
#else
        public List<string> Revisions { get; set; }
#endif
        /// <summary>The sourcePositions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SourcePositions { get; set; }
#nullable restore
#else
        public List<string> SourcePositions { get; set; }
#endif
        /// <summary>The strategy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1SyncStrategy? Strategy { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1SyncStrategy Strategy { get; set; }
#endif
        /// <summary>The syncOptions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.ApplicationSyncOptions? SyncOptions { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.ApplicationSyncOptions SyncOptions { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ArgoCD.Sdk.Models.ApplicationApplicationSyncRequest"/> and sets the default values.
        /// </summary>
        public ApplicationApplicationSyncRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArgoCD.Sdk.Models.ApplicationApplicationSyncRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ArgoCD.Sdk.Models.ApplicationApplicationSyncRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArgoCD.Sdk.Models.ApplicationApplicationSyncRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "appNamespace", n => { AppNamespace = n.GetStringValue(); } },
                { "dryRun", n => { DryRun = n.GetBoolValue(); } },
                { "infos", n => { Infos = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1Info>(global::ArgoCD.Sdk.Models.V1alpha1Info.CreateFromDiscriminatorValue)?.AsList(); } },
                { "manifests", n => { Manifests = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "project", n => { Project = n.GetStringValue(); } },
                { "prune", n => { Prune = n.GetBoolValue(); } },
                { "resources", n => { Resources = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1SyncOperationResource>(global::ArgoCD.Sdk.Models.V1alpha1SyncOperationResource.CreateFromDiscriminatorValue)?.AsList(); } },
                { "retryStrategy", n => { RetryStrategy = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1RetryStrategy>(global::ArgoCD.Sdk.Models.V1alpha1RetryStrategy.CreateFromDiscriminatorValue); } },
                { "revision", n => { Revision = n.GetStringValue(); } },
                { "revisions", n => { Revisions = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "sourcePositions", n => { SourcePositions = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "strategy", n => { Strategy = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1SyncStrategy>(global::ArgoCD.Sdk.Models.V1alpha1SyncStrategy.CreateFromDiscriminatorValue); } },
                { "syncOptions", n => { SyncOptions = n.GetObjectValue<global::ArgoCD.Sdk.Models.ApplicationSyncOptions>(global::ArgoCD.Sdk.Models.ApplicationSyncOptions.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("appNamespace", AppNamespace);
            writer.WriteBoolValue("dryRun", DryRun);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1Info>("infos", Infos);
            writer.WriteCollectionOfPrimitiveValues<string>("manifests", Manifests);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("project", Project);
            writer.WriteBoolValue("prune", Prune);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1SyncOperationResource>("resources", Resources);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1RetryStrategy>("retryStrategy", RetryStrategy);
            writer.WriteStringValue("revision", Revision);
            writer.WriteCollectionOfPrimitiveValues<string>("revisions", Revisions);
            writer.WriteCollectionOfPrimitiveValues<string>("sourcePositions", SourcePositions);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1SyncStrategy>("strategy", Strategy);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.ApplicationSyncOptions>("syncOptions", SyncOptions);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

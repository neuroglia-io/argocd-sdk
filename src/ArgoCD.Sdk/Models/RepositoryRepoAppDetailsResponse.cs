// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArgoCD.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RepositoryRepoAppDetailsResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The directory property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.RepositoryDirectoryAppSpec? Directory { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.RepositoryDirectoryAppSpec Directory { get; set; }
#endif
        /// <summary>The helm property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.RepositoryHelmAppSpec? Helm { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.RepositoryHelmAppSpec Helm { get; set; }
#endif
        /// <summary>The kustomize property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.RepositoryKustomizeAppSpec? Kustomize { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.RepositoryKustomizeAppSpec Kustomize { get; set; }
#endif
        /// <summary>The plugin property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.RepositoryPluginAppSpec? Plugin { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.RepositoryPluginAppSpec Plugin { get; set; }
#endif
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ArgoCD.Sdk.Models.RepositoryRepoAppDetailsResponse"/> and sets the default values.
        /// </summary>
        public RepositoryRepoAppDetailsResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArgoCD.Sdk.Models.RepositoryRepoAppDetailsResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ArgoCD.Sdk.Models.RepositoryRepoAppDetailsResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArgoCD.Sdk.Models.RepositoryRepoAppDetailsResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "directory", n => { Directory = n.GetObjectValue<global::ArgoCD.Sdk.Models.RepositoryDirectoryAppSpec>(global::ArgoCD.Sdk.Models.RepositoryDirectoryAppSpec.CreateFromDiscriminatorValue); } },
                { "helm", n => { Helm = n.GetObjectValue<global::ArgoCD.Sdk.Models.RepositoryHelmAppSpec>(global::ArgoCD.Sdk.Models.RepositoryHelmAppSpec.CreateFromDiscriminatorValue); } },
                { "kustomize", n => { Kustomize = n.GetObjectValue<global::ArgoCD.Sdk.Models.RepositoryKustomizeAppSpec>(global::ArgoCD.Sdk.Models.RepositoryKustomizeAppSpec.CreateFromDiscriminatorValue); } },
                { "plugin", n => { Plugin = n.GetObjectValue<global::ArgoCD.Sdk.Models.RepositoryPluginAppSpec>(global::ArgoCD.Sdk.Models.RepositoryPluginAppSpec.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.RepositoryDirectoryAppSpec>("directory", Directory);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.RepositoryHelmAppSpec>("helm", Helm);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.RepositoryKustomizeAppSpec>("kustomize", Kustomize);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.RepositoryPluginAppSpec>("plugin", Plugin);
            writer.WriteStringValue("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

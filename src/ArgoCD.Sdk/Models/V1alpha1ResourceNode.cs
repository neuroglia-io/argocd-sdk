// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArgoCD.Sdk.Models
{
    /// <summary>
    /// ResourceNode contains information about a live Kubernetes resource and its relationships with other resources.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class V1alpha1ResourceNode : global::ArgoCD.Sdk.Models.V1alpha1ResourceRef, IParsable
    {
        /// <summary>Time is a wrapper around time.Time which supports correctmarshaling to YAML and JSON.  Wrappers are provided for manyof the factory methods that the time package offers.+protobuf.options.marshal=false+protobuf.as=Timestamp+protobuf.options.(gogoproto.goproto_stringer)=false</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The health property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1HealthStatus? Health { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1HealthStatus Health { get; set; }
#endif
        /// <summary>Images lists container images associated with the resource.This is primarily useful for pods and other workload resources.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Images { get; set; }
#nullable restore
#else
        public List<string> Images { get; set; }
#endif
        /// <summary>Info provides additional metadata or annotations about the resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1InfoItem>? Info { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1InfoItem> Info { get; set; }
#endif
        /// <summary>ResourceNetworkingInfo holds networking-related information for a resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo? NetworkingInfo { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo NetworkingInfo { get; set; }
#endif
        /// <summary>ParentRefs lists the parent resources that reference this resource.This helps in understanding ownership and hierarchical relationships.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1ResourceRef>? ParentRefs { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1ResourceRef> ParentRefs { get; set; }
#endif
        /// <summary>ResourceVersion indicates the version of the resource, used to track changes.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResourceVersion { get; set; }
#nullable restore
#else
        public string ResourceVersion { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArgoCD.Sdk.Models.V1alpha1ResourceNode"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ArgoCD.Sdk.Models.V1alpha1ResourceNode CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArgoCD.Sdk.Models.V1alpha1ResourceNode();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "health", n => { Health = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1HealthStatus>(global::ArgoCD.Sdk.Models.V1alpha1HealthStatus.CreateFromDiscriminatorValue); } },
                { "images", n => { Images = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "info", n => { Info = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1InfoItem>(global::ArgoCD.Sdk.Models.V1alpha1InfoItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "networkingInfo", n => { NetworkingInfo = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo>(global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo.CreateFromDiscriminatorValue); } },
                { "parentRefs", n => { ParentRefs = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ResourceRef>(global::ArgoCD.Sdk.Models.V1alpha1ResourceRef.CreateFromDiscriminatorValue)?.AsList(); } },
                { "resourceVersion", n => { ResourceVersion = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1HealthStatus>("health", Health);
            writer.WriteCollectionOfPrimitiveValues<string>("images", Images);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1InfoItem>("info", Info);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo>("networkingInfo", NetworkingInfo);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ResourceRef>("parentRefs", ParentRefs);
            writer.WriteStringValue("resourceVersion", ResourceVersion);
        }
    }
}
#pragma warning restore CS0618

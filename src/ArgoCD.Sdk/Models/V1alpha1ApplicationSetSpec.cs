// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArgoCD.Sdk.Models
{
    /// <summary>
    /// ApplicationSetSpec represents a class of application set state.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class V1alpha1ApplicationSetSpec : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>ApplyNestedSelectors enables selectors defined within the generators of two level-nested matrix or merge generatorsDeprecated: This field is ignored, and the behavior is always enabled. The field will be removed in a futureversion of the ApplicationSet CRD.</summary>
        public bool? ApplyNestedSelectors { get; set; }
        /// <summary>The generators property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetGenerator>? Generators { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetGenerator> Generators { get; set; }
#endif
        /// <summary>The goTemplate property</summary>
        public bool? GoTemplate { get; set; }
        /// <summary>The goTemplateOptions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? GoTemplateOptions { get; set; }
#nullable restore
#else
        public List<string> GoTemplateOptions { get; set; }
#endif
        /// <summary>The ignoreApplicationDifferences property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetResourceIgnoreDifferences>? IgnoreApplicationDifferences { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetResourceIgnoreDifferences> IgnoreApplicationDifferences { get; set; }
#endif
        /// <summary>The preservedFields property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1ApplicationPreservedFields? PreservedFields { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1ApplicationPreservedFields PreservedFields { get; set; }
#endif
        /// <summary>ApplicationSetStrategy configures how generated Applications are updated in sequence.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetStrategy? Strategy { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetStrategy Strategy { get; set; }
#endif
        /// <summary>ApplicationSetSyncPolicy configures how generated Applications will relate to theirApplicationSet.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetSyncPolicy? SyncPolicy { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetSyncPolicy SyncPolicy { get; set; }
#endif
        /// <summary>The template property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate? Template { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate Template { get; set; }
#endif
        /// <summary>The templatePatch property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TemplatePatch { get; set; }
#nullable restore
#else
        public string TemplatePatch { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetSpec"/> and sets the default values.
        /// </summary>
        public V1alpha1ApplicationSetSpec()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetSpec"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetSpec CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetSpec();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "applyNestedSelectors", n => { ApplyNestedSelectors = n.GetBoolValue(); } },
                { "generators", n => { Generators = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetGenerator>(global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetGenerator.CreateFromDiscriminatorValue)?.AsList(); } },
                { "goTemplate", n => { GoTemplate = n.GetBoolValue(); } },
                { "goTemplateOptions", n => { GoTemplateOptions = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "ignoreApplicationDifferences", n => { IgnoreApplicationDifferences = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetResourceIgnoreDifferences>(global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetResourceIgnoreDifferences.CreateFromDiscriminatorValue)?.AsList(); } },
                { "preservedFields", n => { PreservedFields = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ApplicationPreservedFields>(global::ArgoCD.Sdk.Models.V1alpha1ApplicationPreservedFields.CreateFromDiscriminatorValue); } },
                { "strategy", n => { Strategy = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetStrategy>(global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetStrategy.CreateFromDiscriminatorValue); } },
                { "syncPolicy", n => { SyncPolicy = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetSyncPolicy>(global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetSyncPolicy.CreateFromDiscriminatorValue); } },
                { "template", n => { Template = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate>(global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate.CreateFromDiscriminatorValue); } },
                { "templatePatch", n => { TemplatePatch = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("applyNestedSelectors", ApplyNestedSelectors);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetGenerator>("generators", Generators);
            writer.WriteBoolValue("goTemplate", GoTemplate);
            writer.WriteCollectionOfPrimitiveValues<string>("goTemplateOptions", GoTemplateOptions);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetResourceIgnoreDifferences>("ignoreApplicationDifferences", IgnoreApplicationDifferences);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ApplicationPreservedFields>("preservedFields", PreservedFields);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetStrategy>("strategy", Strategy);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetSyncPolicy>("syncPolicy", SyncPolicy);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate>("template", Template);
            writer.WriteStringValue("templatePatch", TemplatePatch);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

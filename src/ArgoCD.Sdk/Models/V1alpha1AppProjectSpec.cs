// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArgoCD.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class V1alpha1AppProjectSpec : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The clusterResourceBlacklist property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1GroupKind>? ClusterResourceBlacklist { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1GroupKind> ClusterResourceBlacklist { get; set; }
#endif
        /// <summary>The clusterResourceWhitelist property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1GroupKind>? ClusterResourceWhitelist { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1GroupKind> ClusterResourceWhitelist { get; set; }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The destinations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1ApplicationDestination>? Destinations { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1ApplicationDestination> Destinations { get; set; }
#endif
        /// <summary>DestinationServiceAccounts holds information about the service accounts to be impersonated for the application sync operation for each destination.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1ApplicationDestinationServiceAccount>? DestinationServiceAccounts { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1ApplicationDestinationServiceAccount> DestinationServiceAccounts { get; set; }
#endif
        /// <summary>The namespaceResourceBlacklist property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1GroupKind>? NamespaceResourceBlacklist { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1GroupKind> NamespaceResourceBlacklist { get; set; }
#endif
        /// <summary>The namespaceResourceWhitelist property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1GroupKind>? NamespaceResourceWhitelist { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1GroupKind> NamespaceResourceWhitelist { get; set; }
#endif
        /// <summary>The orphanedResources property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1OrphanedResourcesMonitorSettings? OrphanedResources { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1OrphanedResourcesMonitorSettings OrphanedResources { get; set; }
#endif
        /// <summary>The permitOnlyProjectScopedClusters property</summary>
        public bool? PermitOnlyProjectScopedClusters { get; set; }
        /// <summary>The roles property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1ProjectRole>? Roles { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1ProjectRole> Roles { get; set; }
#endif
        /// <summary>The signatureKeys property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1SignatureKey>? SignatureKeys { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1SignatureKey> SignatureKeys { get; set; }
#endif
        /// <summary>The sourceNamespaces property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SourceNamespaces { get; set; }
#nullable restore
#else
        public List<string> SourceNamespaces { get; set; }
#endif
        /// <summary>The sourceRepos property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SourceRepos { get; set; }
#nullable restore
#else
        public List<string> SourceRepos { get; set; }
#endif
        /// <summary>The syncWindows property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1SyncWindow>? SyncWindows { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1SyncWindow> SyncWindows { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ArgoCD.Sdk.Models.V1alpha1AppProjectSpec"/> and sets the default values.
        /// </summary>
        public V1alpha1AppProjectSpec()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArgoCD.Sdk.Models.V1alpha1AppProjectSpec"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ArgoCD.Sdk.Models.V1alpha1AppProjectSpec CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArgoCD.Sdk.Models.V1alpha1AppProjectSpec();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "clusterResourceBlacklist", n => { ClusterResourceBlacklist = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1GroupKind>(global::ArgoCD.Sdk.Models.V1GroupKind.CreateFromDiscriminatorValue)?.AsList(); } },
                { "clusterResourceWhitelist", n => { ClusterResourceWhitelist = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1GroupKind>(global::ArgoCD.Sdk.Models.V1GroupKind.CreateFromDiscriminatorValue)?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "destinationServiceAccounts", n => { DestinationServiceAccounts = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ApplicationDestinationServiceAccount>(global::ArgoCD.Sdk.Models.V1alpha1ApplicationDestinationServiceAccount.CreateFromDiscriminatorValue)?.AsList(); } },
                { "destinations", n => { Destinations = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ApplicationDestination>(global::ArgoCD.Sdk.Models.V1alpha1ApplicationDestination.CreateFromDiscriminatorValue)?.AsList(); } },
                { "namespaceResourceBlacklist", n => { NamespaceResourceBlacklist = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1GroupKind>(global::ArgoCD.Sdk.Models.V1GroupKind.CreateFromDiscriminatorValue)?.AsList(); } },
                { "namespaceResourceWhitelist", n => { NamespaceResourceWhitelist = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1GroupKind>(global::ArgoCD.Sdk.Models.V1GroupKind.CreateFromDiscriminatorValue)?.AsList(); } },
                { "orphanedResources", n => { OrphanedResources = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1OrphanedResourcesMonitorSettings>(global::ArgoCD.Sdk.Models.V1alpha1OrphanedResourcesMonitorSettings.CreateFromDiscriminatorValue); } },
                { "permitOnlyProjectScopedClusters", n => { PermitOnlyProjectScopedClusters = n.GetBoolValue(); } },
                { "roles", n => { Roles = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ProjectRole>(global::ArgoCD.Sdk.Models.V1alpha1ProjectRole.CreateFromDiscriminatorValue)?.AsList(); } },
                { "signatureKeys", n => { SignatureKeys = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1SignatureKey>(global::ArgoCD.Sdk.Models.V1alpha1SignatureKey.CreateFromDiscriminatorValue)?.AsList(); } },
                { "sourceNamespaces", n => { SourceNamespaces = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "sourceRepos", n => { SourceRepos = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "syncWindows", n => { SyncWindows = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1SyncWindow>(global::ArgoCD.Sdk.Models.V1alpha1SyncWindow.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1GroupKind>("clusterResourceBlacklist", ClusterResourceBlacklist);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1GroupKind>("clusterResourceWhitelist", ClusterResourceWhitelist);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ApplicationDestination>("destinations", Destinations);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ApplicationDestinationServiceAccount>("destinationServiceAccounts", DestinationServiceAccounts);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1GroupKind>("namespaceResourceBlacklist", NamespaceResourceBlacklist);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1GroupKind>("namespaceResourceWhitelist", NamespaceResourceWhitelist);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1OrphanedResourcesMonitorSettings>("orphanedResources", OrphanedResources);
            writer.WriteBoolValue("permitOnlyProjectScopedClusters", PermitOnlyProjectScopedClusters);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ProjectRole>("roles", Roles);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1SignatureKey>("signatureKeys", SignatureKeys);
            writer.WriteCollectionOfPrimitiveValues<string>("sourceNamespaces", SourceNamespaces);
            writer.WriteCollectionOfPrimitiveValues<string>("sourceRepos", SourceRepos);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1SyncWindow>("syncWindows", SyncWindows);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArgoCD.Sdk.Models
{
    /// <summary>
    /// ResourceNetworkingInfo holds networking-related information for a resource.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class V1alpha1ResourceNetworkingInfo : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>ExternalURLs holds a list of URLs that should be accessible externally.This field is typically populated for Ingress resources based on their hostname rules.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExternalURLs { get; set; }
#nullable restore
#else
        public List<string> ExternalURLs { get; set; }
#endif
        /// <summary>Ingress provides information about external access points (e.g., load balancer ingress) for this resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1LoadBalancerIngress>? Ingress { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1LoadBalancerIngress> Ingress { get; set; }
#endif
        /// <summary>Labels holds the labels associated with this networking resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo_labels? Labels { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo_labels Labels { get; set; }
#endif
        /// <summary>TargetLabels represents labels associated with the target resources that this resource communicates with.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo_targetLabels? TargetLabels { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo_targetLabels TargetLabels { get; set; }
#endif
        /// <summary>TargetRefs contains references to other resources that this resource interacts with, such as Services or Pods.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1ResourceRef>? TargetRefs { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1ResourceRef> TargetRefs { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo"/> and sets the default values.
        /// </summary>
        public V1alpha1ResourceNetworkingInfo()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "externalURLs", n => { ExternalURLs = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "ingress", n => { Ingress = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1LoadBalancerIngress>(global::ArgoCD.Sdk.Models.V1LoadBalancerIngress.CreateFromDiscriminatorValue)?.AsList(); } },
                { "labels", n => { Labels = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo_labels>(global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo_labels.CreateFromDiscriminatorValue); } },
                { "targetLabels", n => { TargetLabels = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo_targetLabels>(global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo_targetLabels.CreateFromDiscriminatorValue); } },
                { "targetRefs", n => { TargetRefs = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ResourceRef>(global::ArgoCD.Sdk.Models.V1alpha1ResourceRef.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("externalURLs", ExternalURLs);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1LoadBalancerIngress>("ingress", Ingress);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo_labels>("labels", Labels);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ResourceNetworkingInfo_targetLabels>("targetLabels", TargetLabels);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ResourceRef>("targetRefs", TargetRefs);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

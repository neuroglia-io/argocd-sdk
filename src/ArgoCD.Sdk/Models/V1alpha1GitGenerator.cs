// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArgoCD.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class V1alpha1GitGenerator : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The directories property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1GitDirectoryGeneratorItem>? Directories { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1GitDirectoryGeneratorItem> Directories { get; set; }
#endif
        /// <summary>The files property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1GitFileGeneratorItem>? Files { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1GitFileGeneratorItem> Files { get; set; }
#endif
        /// <summary>The pathParamPrefix property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PathParamPrefix { get; set; }
#nullable restore
#else
        public string PathParamPrefix { get; set; }
#endif
        /// <summary>The repoURL property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RepoURL { get; set; }
#nullable restore
#else
        public string RepoURL { get; set; }
#endif
        /// <summary>The requeueAfterSeconds property</summary>
        public long? RequeueAfterSeconds { get; set; }
        /// <summary>The revision property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Revision { get; set; }
#nullable restore
#else
        public string Revision { get; set; }
#endif
        /// <summary>The template property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate? Template { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate Template { get; set; }
#endif
        /// <summary>The values property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1GitGenerator_values? Values { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1GitGenerator_values Values { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ArgoCD.Sdk.Models.V1alpha1GitGenerator"/> and sets the default values.
        /// </summary>
        public V1alpha1GitGenerator()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArgoCD.Sdk.Models.V1alpha1GitGenerator"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ArgoCD.Sdk.Models.V1alpha1GitGenerator CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArgoCD.Sdk.Models.V1alpha1GitGenerator();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "directories", n => { Directories = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1GitDirectoryGeneratorItem>(global::ArgoCD.Sdk.Models.V1alpha1GitDirectoryGeneratorItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "files", n => { Files = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1GitFileGeneratorItem>(global::ArgoCD.Sdk.Models.V1alpha1GitFileGeneratorItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "pathParamPrefix", n => { PathParamPrefix = n.GetStringValue(); } },
                { "repoURL", n => { RepoURL = n.GetStringValue(); } },
                { "requeueAfterSeconds", n => { RequeueAfterSeconds = n.GetLongValue(); } },
                { "revision", n => { Revision = n.GetStringValue(); } },
                { "template", n => { Template = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate>(global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate.CreateFromDiscriminatorValue); } },
                { "values", n => { Values = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1GitGenerator_values>(global::ArgoCD.Sdk.Models.V1alpha1GitGenerator_values.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1GitDirectoryGeneratorItem>("directories", Directories);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1GitFileGeneratorItem>("files", Files);
            writer.WriteStringValue("pathParamPrefix", PathParamPrefix);
            writer.WriteStringValue("repoURL", RepoURL);
            writer.WriteLongValue("requeueAfterSeconds", RequeueAfterSeconds);
            writer.WriteStringValue("revision", Revision);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate>("template", Template);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1GitGenerator_values>("values", Values);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArgoCD.Sdk.Models
{
    /// <summary>
    /// PluginGenerator defines connection info specific to Plugin.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class V1alpha1PluginGenerator : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The configMapRef property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1PluginConfigMapRef? ConfigMapRef { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1PluginConfigMapRef ConfigMapRef { get; set; }
#endif
        /// <summary>The input property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1PluginInput? Input { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1PluginInput Input { get; set; }
#endif
        /// <summary>RequeueAfterSeconds determines how long the ApplicationSet controller will wait before reconciling the ApplicationSet again.</summary>
        public long? RequeueAfterSeconds { get; set; }
        /// <summary>The template property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate? Template { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate Template { get; set; }
#endif
        /// <summary>Values contains key/value pairs which are passed directly as parameters to the template. These values will not besent as parameters to the plugin.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1PluginGenerator_values? Values { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1PluginGenerator_values Values { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ArgoCD.Sdk.Models.V1alpha1PluginGenerator"/> and sets the default values.
        /// </summary>
        public V1alpha1PluginGenerator()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArgoCD.Sdk.Models.V1alpha1PluginGenerator"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ArgoCD.Sdk.Models.V1alpha1PluginGenerator CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArgoCD.Sdk.Models.V1alpha1PluginGenerator();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "configMapRef", n => { ConfigMapRef = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1PluginConfigMapRef>(global::ArgoCD.Sdk.Models.V1alpha1PluginConfigMapRef.CreateFromDiscriminatorValue); } },
                { "input", n => { Input = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1PluginInput>(global::ArgoCD.Sdk.Models.V1alpha1PluginInput.CreateFromDiscriminatorValue); } },
                { "requeueAfterSeconds", n => { RequeueAfterSeconds = n.GetLongValue(); } },
                { "template", n => { Template = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate>(global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate.CreateFromDiscriminatorValue); } },
                { "values", n => { Values = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1PluginGenerator_values>(global::ArgoCD.Sdk.Models.V1alpha1PluginGenerator_values.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1PluginConfigMapRef>("configMapRef", ConfigMapRef);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1PluginInput>("input", Input);
            writer.WriteLongValue("requeueAfterSeconds", RequeueAfterSeconds);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1ApplicationSetTemplate>("template", Template);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1PluginGenerator_values>("values", Values);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

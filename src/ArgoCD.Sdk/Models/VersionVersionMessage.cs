// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArgoCD.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class VersionVersionMessage : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The BuildDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BuildDate { get; set; }
#nullable restore
#else
        public string BuildDate { get; set; }
#endif
        /// <summary>The Compiler property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Compiler { get; set; }
#nullable restore
#else
        public string Compiler { get; set; }
#endif
        /// <summary>The ExtraBuildInfo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExtraBuildInfo { get; set; }
#nullable restore
#else
        public string ExtraBuildInfo { get; set; }
#endif
        /// <summary>The GitCommit property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GitCommit { get; set; }
#nullable restore
#else
        public string GitCommit { get; set; }
#endif
        /// <summary>The GitTag property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GitTag { get; set; }
#nullable restore
#else
        public string GitTag { get; set; }
#endif
        /// <summary>The GitTreeState property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GitTreeState { get; set; }
#nullable restore
#else
        public string GitTreeState { get; set; }
#endif
        /// <summary>The GoVersion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GoVersion { get; set; }
#nullable restore
#else
        public string GoVersion { get; set; }
#endif
        /// <summary>The HelmVersion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HelmVersion { get; set; }
#nullable restore
#else
        public string HelmVersion { get; set; }
#endif
        /// <summary>The JsonnetVersion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JsonnetVersion { get; set; }
#nullable restore
#else
        public string JsonnetVersion { get; set; }
#endif
        /// <summary>The KubectlVersion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? KubectlVersion { get; set; }
#nullable restore
#else
        public string KubectlVersion { get; set; }
#endif
        /// <summary>The KustomizeVersion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? KustomizeVersion { get; set; }
#nullable restore
#else
        public string KustomizeVersion { get; set; }
#endif
        /// <summary>The Platform property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Platform { get; set; }
#nullable restore
#else
        public string Platform { get; set; }
#endif
        /// <summary>The Version property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Version { get; set; }
#nullable restore
#else
        public string Version { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ArgoCD.Sdk.Models.VersionVersionMessage"/> and sets the default values.
        /// </summary>
        public VersionVersionMessage()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArgoCD.Sdk.Models.VersionVersionMessage"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ArgoCD.Sdk.Models.VersionVersionMessage CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArgoCD.Sdk.Models.VersionVersionMessage();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "BuildDate", n => { BuildDate = n.GetStringValue(); } },
                { "Compiler", n => { Compiler = n.GetStringValue(); } },
                { "ExtraBuildInfo", n => { ExtraBuildInfo = n.GetStringValue(); } },
                { "GitCommit", n => { GitCommit = n.GetStringValue(); } },
                { "GitTag", n => { GitTag = n.GetStringValue(); } },
                { "GitTreeState", n => { GitTreeState = n.GetStringValue(); } },
                { "GoVersion", n => { GoVersion = n.GetStringValue(); } },
                { "HelmVersion", n => { HelmVersion = n.GetStringValue(); } },
                { "JsonnetVersion", n => { JsonnetVersion = n.GetStringValue(); } },
                { "KubectlVersion", n => { KubectlVersion = n.GetStringValue(); } },
                { "KustomizeVersion", n => { KustomizeVersion = n.GetStringValue(); } },
                { "Platform", n => { Platform = n.GetStringValue(); } },
                { "Version", n => { Version = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("BuildDate", BuildDate);
            writer.WriteStringValue("Compiler", Compiler);
            writer.WriteStringValue("ExtraBuildInfo", ExtraBuildInfo);
            writer.WriteStringValue("GitCommit", GitCommit);
            writer.WriteStringValue("GitTag", GitTag);
            writer.WriteStringValue("GitTreeState", GitTreeState);
            writer.WriteStringValue("GoVersion", GoVersion);
            writer.WriteStringValue("HelmVersion", HelmVersion);
            writer.WriteStringValue("JsonnetVersion", JsonnetVersion);
            writer.WriteStringValue("KubectlVersion", KubectlVersion);
            writer.WriteStringValue("KustomizeVersion", KustomizeVersion);
            writer.WriteStringValue("Platform", Platform);
            writer.WriteStringValue("Version", Version);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

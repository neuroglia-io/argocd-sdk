// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArgoCD.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ClusterSettings : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The additionalUrls property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AdditionalUrls { get; set; }
#nullable restore
#else
        public List<string> AdditionalUrls { get; set; }
#endif
        /// <summary>The appLabelKey property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppLabelKey { get; set; }
#nullable restore
#else
        public string AppLabelKey { get; set; }
#endif
        /// <summary>The appsInAnyNamespaceEnabled property</summary>
        public bool? AppsInAnyNamespaceEnabled { get; set; }
        /// <summary>Deprecated: use sidecar plugins instead.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.V1alpha1ConfigManagementPlugin>? ConfigManagementPlugins { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.V1alpha1ConfigManagementPlugin> ConfigManagementPlugins { get; set; }
#endif
        /// <summary>The controllerNamespace property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ControllerNamespace { get; set; }
#nullable restore
#else
        public string ControllerNamespace { get; set; }
#endif
        /// <summary>The dexConfig property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.ClusterDexConfig? DexConfig { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.ClusterDexConfig DexConfig { get; set; }
#endif
        /// <summary>The execEnabled property</summary>
        public bool? ExecEnabled { get; set; }
        /// <summary>The googleAnalytics property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.ClusterGoogleAnalyticsConfig? GoogleAnalytics { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.ClusterGoogleAnalyticsConfig GoogleAnalytics { get; set; }
#endif
        /// <summary>The help property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.ClusterHelp? Help { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.ClusterHelp Help { get; set; }
#endif
        /// <summary>The hydratorEnabled property</summary>
        public bool? HydratorEnabled { get; set; }
        /// <summary>The impersonationEnabled property</summary>
        public bool? ImpersonationEnabled { get; set; }
        /// <summary>The installationID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InstallationID { get; set; }
#nullable restore
#else
        public string InstallationID { get; set; }
#endif
        /// <summary>The kustomizeOptions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.V1alpha1KustomizeOptions? KustomizeOptions { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.V1alpha1KustomizeOptions KustomizeOptions { get; set; }
#endif
        /// <summary>The kustomizeVersions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? KustomizeVersions { get; set; }
#nullable restore
#else
        public List<string> KustomizeVersions { get; set; }
#endif
        /// <summary>The oidcConfig property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.ClusterOIDCConfig? OidcConfig { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.ClusterOIDCConfig OidcConfig { get; set; }
#endif
        /// <summary>The passwordPattern property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PasswordPattern { get; set; }
#nullable restore
#else
        public string PasswordPattern { get; set; }
#endif
        /// <summary>The plugins property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArgoCD.Sdk.Models.ClusterPlugin>? Plugins { get; set; }
#nullable restore
#else
        public List<global::ArgoCD.Sdk.Models.ClusterPlugin> Plugins { get; set; }
#endif
        /// <summary>The resourceOverrides property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArgoCD.Sdk.Models.ClusterSettings_resourceOverrides? ResourceOverrides { get; set; }
#nullable restore
#else
        public global::ArgoCD.Sdk.Models.ClusterSettings_resourceOverrides ResourceOverrides { get; set; }
#endif
        /// <summary>The statusBadgeEnabled property</summary>
        public bool? StatusBadgeEnabled { get; set; }
        /// <summary>The statusBadgeRootUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatusBadgeRootUrl { get; set; }
#nullable restore
#else
        public string StatusBadgeRootUrl { get; set; }
#endif
        /// <summary>The trackingMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TrackingMethod { get; set; }
#nullable restore
#else
        public string TrackingMethod { get; set; }
#endif
        /// <summary>The uiBannerContent property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UiBannerContent { get; set; }
#nullable restore
#else
        public string UiBannerContent { get; set; }
#endif
        /// <summary>The uiBannerPermanent property</summary>
        public bool? UiBannerPermanent { get; set; }
        /// <summary>The uiBannerPosition property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UiBannerPosition { get; set; }
#nullable restore
#else
        public string UiBannerPosition { get; set; }
#endif
        /// <summary>The uiBannerURL property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UiBannerURL { get; set; }
#nullable restore
#else
        public string UiBannerURL { get; set; }
#endif
        /// <summary>The uiCssURL property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UiCssURL { get; set; }
#nullable restore
#else
        public string UiCssURL { get; set; }
#endif
        /// <summary>The url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>The userLoginsDisabled property</summary>
        public bool? UserLoginsDisabled { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ArgoCD.Sdk.Models.ClusterSettings"/> and sets the default values.
        /// </summary>
        public ClusterSettings()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArgoCD.Sdk.Models.ClusterSettings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ArgoCD.Sdk.Models.ClusterSettings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArgoCD.Sdk.Models.ClusterSettings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "additionalUrls", n => { AdditionalUrls = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "appLabelKey", n => { AppLabelKey = n.GetStringValue(); } },
                { "appsInAnyNamespaceEnabled", n => { AppsInAnyNamespaceEnabled = n.GetBoolValue(); } },
                { "configManagementPlugins", n => { ConfigManagementPlugins = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ConfigManagementPlugin>(global::ArgoCD.Sdk.Models.V1alpha1ConfigManagementPlugin.CreateFromDiscriminatorValue)?.AsList(); } },
                { "controllerNamespace", n => { ControllerNamespace = n.GetStringValue(); } },
                { "dexConfig", n => { DexConfig = n.GetObjectValue<global::ArgoCD.Sdk.Models.ClusterDexConfig>(global::ArgoCD.Sdk.Models.ClusterDexConfig.CreateFromDiscriminatorValue); } },
                { "execEnabled", n => { ExecEnabled = n.GetBoolValue(); } },
                { "googleAnalytics", n => { GoogleAnalytics = n.GetObjectValue<global::ArgoCD.Sdk.Models.ClusterGoogleAnalyticsConfig>(global::ArgoCD.Sdk.Models.ClusterGoogleAnalyticsConfig.CreateFromDiscriminatorValue); } },
                { "help", n => { Help = n.GetObjectValue<global::ArgoCD.Sdk.Models.ClusterHelp>(global::ArgoCD.Sdk.Models.ClusterHelp.CreateFromDiscriminatorValue); } },
                { "hydratorEnabled", n => { HydratorEnabled = n.GetBoolValue(); } },
                { "impersonationEnabled", n => { ImpersonationEnabled = n.GetBoolValue(); } },
                { "installationID", n => { InstallationID = n.GetStringValue(); } },
                { "kustomizeOptions", n => { KustomizeOptions = n.GetObjectValue<global::ArgoCD.Sdk.Models.V1alpha1KustomizeOptions>(global::ArgoCD.Sdk.Models.V1alpha1KustomizeOptions.CreateFromDiscriminatorValue); } },
                { "kustomizeVersions", n => { KustomizeVersions = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "oidcConfig", n => { OidcConfig = n.GetObjectValue<global::ArgoCD.Sdk.Models.ClusterOIDCConfig>(global::ArgoCD.Sdk.Models.ClusterOIDCConfig.CreateFromDiscriminatorValue); } },
                { "passwordPattern", n => { PasswordPattern = n.GetStringValue(); } },
                { "plugins", n => { Plugins = n.GetCollectionOfObjectValues<global::ArgoCD.Sdk.Models.ClusterPlugin>(global::ArgoCD.Sdk.Models.ClusterPlugin.CreateFromDiscriminatorValue)?.AsList(); } },
                { "resourceOverrides", n => { ResourceOverrides = n.GetObjectValue<global::ArgoCD.Sdk.Models.ClusterSettings_resourceOverrides>(global::ArgoCD.Sdk.Models.ClusterSettings_resourceOverrides.CreateFromDiscriminatorValue); } },
                { "statusBadgeEnabled", n => { StatusBadgeEnabled = n.GetBoolValue(); } },
                { "statusBadgeRootUrl", n => { StatusBadgeRootUrl = n.GetStringValue(); } },
                { "trackingMethod", n => { TrackingMethod = n.GetStringValue(); } },
                { "uiBannerContent", n => { UiBannerContent = n.GetStringValue(); } },
                { "uiBannerPermanent", n => { UiBannerPermanent = n.GetBoolValue(); } },
                { "uiBannerPosition", n => { UiBannerPosition = n.GetStringValue(); } },
                { "uiBannerURL", n => { UiBannerURL = n.GetStringValue(); } },
                { "uiCssURL", n => { UiCssURL = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
                { "userLoginsDisabled", n => { UserLoginsDisabled = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("additionalUrls", AdditionalUrls);
            writer.WriteStringValue("appLabelKey", AppLabelKey);
            writer.WriteBoolValue("appsInAnyNamespaceEnabled", AppsInAnyNamespaceEnabled);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.V1alpha1ConfigManagementPlugin>("configManagementPlugins", ConfigManagementPlugins);
            writer.WriteStringValue("controllerNamespace", ControllerNamespace);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.ClusterDexConfig>("dexConfig", DexConfig);
            writer.WriteBoolValue("execEnabled", ExecEnabled);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.ClusterGoogleAnalyticsConfig>("googleAnalytics", GoogleAnalytics);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.ClusterHelp>("help", Help);
            writer.WriteBoolValue("hydratorEnabled", HydratorEnabled);
            writer.WriteBoolValue("impersonationEnabled", ImpersonationEnabled);
            writer.WriteStringValue("installationID", InstallationID);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.V1alpha1KustomizeOptions>("kustomizeOptions", KustomizeOptions);
            writer.WriteCollectionOfPrimitiveValues<string>("kustomizeVersions", KustomizeVersions);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.ClusterOIDCConfig>("oidcConfig", OidcConfig);
            writer.WriteStringValue("passwordPattern", PasswordPattern);
            writer.WriteCollectionOfObjectValues<global::ArgoCD.Sdk.Models.ClusterPlugin>("plugins", Plugins);
            writer.WriteObjectValue<global::ArgoCD.Sdk.Models.ClusterSettings_resourceOverrides>("resourceOverrides", ResourceOverrides);
            writer.WriteBoolValue("statusBadgeEnabled", StatusBadgeEnabled);
            writer.WriteStringValue("statusBadgeRootUrl", StatusBadgeRootUrl);
            writer.WriteStringValue("trackingMethod", TrackingMethod);
            writer.WriteStringValue("uiBannerContent", UiBannerContent);
            writer.WriteBoolValue("uiBannerPermanent", UiBannerPermanent);
            writer.WriteStringValue("uiBannerPosition", UiBannerPosition);
            writer.WriteStringValue("uiBannerURL", UiBannerURL);
            writer.WriteStringValue("uiCssURL", UiCssURL);
            writer.WriteStringValue("url", Url);
            writer.WriteBoolValue("userLoginsDisabled", UserLoginsDisabled);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
